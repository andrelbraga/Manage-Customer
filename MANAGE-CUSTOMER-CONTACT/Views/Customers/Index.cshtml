@using MANAGE_CUSTOMER_CONTACT.ViewModels
@model  CommonViewModel



<div style="padding-top: 20%">
    @using (Html.BeginForm("Index", "Customers", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("Roles", (TempData.Count() == 0 ? Model.Roles.ToString() : TempData["Role"].ToString()))
        <div class="col-sm-12">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-md-3">Nome</label>
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Customer.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Customer.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Gender</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.Customer.GenderId, new SelectList(Model.Genders, "Id", "Name"), "-- Select Item --", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Customer.GenderId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">City</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.Customer.CityId, new SelectList(Model.Citys, "Id", "Name"), "-- Select Item --", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Customer.CityId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-md-3">Region</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.Customer.RegionId, new SelectList(Model.Regions, "Id", "Name"), "-- Select Item --", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Customer.RegionId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">Classification</label>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.Customer.ClassificationId, new SelectList(Model.Classifications, "Id", "Name"), "-- Select Item --", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Customer.ClassificationId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @{
                            if (TempData.Count() == 0)
                            {
                                if (Model.Roles.ToString() == "1")
                                {
                                    <div class="form-group">
                                        <label class="control-label col-md-3">User</label>
                                        <div class="col-md-6">
                                            @Html.DropDownListFor(model => model.Customer.UserSysId, new SelectList(Model.UserSys, "Id", "Login"), "-- Select Item --", new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Customer.UserSysId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }
                            }
                            else if (TempData["Role"].ToString() == "1")
                            {
                                <div class="form-group">
                                    <label class="control-label col-md-3">User</label>
                                    <div class="col-md-6">
                                        @Html.DropDownListFor(model => model.Customer.UserSysId, new SelectList(Model.UserSys, "Id", "Login"), "-- Select Item --", new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Customer.UserSysId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                        }

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6" style="padding: 10px">
                    <div class="form-group">
                        <label class="control-label col-md-3">LastPurchase</label>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Customer.LastPurchase, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.Customer.LastPurchase, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-6" style="padding: 10px">
                    <div class="form-group">
                        <label class="control-label col-md-3">Until</label>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.UntilPurchase, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.Customer.LastPurchase, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-12">
                            <input type="submit" value="Search" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-12">
                            <input type="submit" value="Clear Fields" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    &nbsp;
    <table class="table">
        <tr>
            <th>
                Classification
            </th>
            <th>
                Name
            </th>
            <th>
                Phone
            </th>
            <th>
                Gender
            </th>
            <th>
                City
            </th>
            <th>
                Region
            </th>
            <th>
                Last Purchase
            </th>
            @{
                if (TempData.Count() == 0)
                {
                    if (Model.Roles.ToString() == "1")
                    {
                        <th>
                            Seller
                        </th>
                    }
                }
                else if (TempData["Role"].ToString() == "1")
                {
                    <th>
                        Seller
                    </th>
                }
            }
        </tr>

        @foreach (var item in Model.Customers)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Classification.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Region.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastPurchase)
                </td>
                @{
                    if (TempData.Count() == 0)
                    {
                        if (Model.Roles.ToString() == "1")
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.UserSys.Login)
                            </td>
                        }

                    }
                    else if (TempData["Role"].ToString() == "1")
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.UserSys.Login)
                        </td>
                    }
                }
                @*<td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>*@
            </tr>
        }

    </table>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}